//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21124049
// Cuda compilation tools, release 8.0, V8.0.44
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_35
.address_size 64

	// .globl	_Z20closest_hit_radiancev
.global .align 4 .f32 scene_epsilon;
.global .align 4 .f32 occlusion_distance;
.global .align 4 .u32 sqrt_occlusion_samples;
.global .align 8 .b8 top_object[4];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .b8 shading_normal[12];
.global .align 4 .b8 geometric_normal[12];
.global .align 4 .b8 shading_color[12];
.global .align 4 .b8 ray[36];
.global .align 4 .f32 t_hit;
.global .align 8 .b8 launch_index[8];
.global .align 4 .u32 frame;
.global .align 4 .u32 subframe_idx;
.global .align 8 .b8 prd_radiance[20];
.global .align 4 .b8 prd_occlusion[4];
.global .align 4 .f32 Kd;
.global .align 4 .f32 Ka;
.global .align 4 .f32 Ks;
.global .align 4 .f32 Kr;
.global .align 4 .f32 phong_exp;
.global .align 4 .u32 max_depth;
.global .align 1 .b8 lights[1];
.global .align 4 .b8 ambient_light_color[12];
.global .align 4 .u32 radiance_ray_type;
.global .align 4 .u32 shadow_ray_type;
.global .align 8 .b8 prd_shadow[12];
.global .align 8 .b8 prd[20];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo18occlusion_distanceE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo22sqrt_occlusion_samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13shading_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5t_hitE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5frameE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12subframe_idxE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12prd_radianceE[8] = {82, 97, 121, 0, 20, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13prd_occlusionE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2KdE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2KaE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2KsE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2KrE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9phong_expE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9max_depthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19ambient_light_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17radiance_ray_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15shadow_ray_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10prd_shadowE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3prdE[8] = {82, 97, 121, 0, 20, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename18occlusion_distanceE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename22sqrt_occlusion_samplesE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13shading_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5t_hitE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5frameE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12subframe_idxE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12prd_radianceE[20] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 114, 97, 100, 105, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13prd_occlusionE[21] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 111, 99, 99, 108, 117, 115, 105, 111, 110, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2KdE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2KaE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2KsE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2KrE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9phong_expE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9max_depthE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename19ambient_light_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename17radiance_ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15shadow_ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10prd_shadowE[18] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 115, 104, 97, 100, 111, 119, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3prdE[20] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 114, 97, 100, 105, 97, 110, 99, 101, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum18occlusion_distanceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum22sqrt_occlusion_samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13shading_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5t_hitE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5frameE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12subframe_idxE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12prd_radianceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13prd_occlusionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2KdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2KaE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2KsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2KrE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9phong_expE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9max_depthE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19ambient_light_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum17radiance_ray_typeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15shadow_ray_typeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10prd_shadowE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3prdE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic18occlusion_distanceE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic22sqrt_occlusion_samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic13shading_colorE[24] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 99, 111, 108, 111, 114, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic5t_hitE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic5frameE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12subframe_idxE[16] = {114, 116, 83, 117, 98, 102, 114, 97, 109, 101, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12prd_radianceE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic13prd_occlusionE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic2KdE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2KaE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2KsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2KrE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9phong_expE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9max_depthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19ambient_light_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic17radiance_ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15shadow_ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10prd_shadowE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3prdE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation13scene_epsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation18occlusion_distanceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation22sqrt_occlusion_samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13shading_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5t_hitE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5frameE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12subframe_idxE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12prd_radianceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13prd_occlusionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2KdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2KaE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2KsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2KrE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9phong_expE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9max_depthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19ambient_light_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17radiance_ray_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15shadow_ray_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10prd_shadowE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3prdE[1];

.visible .entry _Z20closest_hit_radiancev(

)
{
	.local .align 8 .b8 	__local_depot0[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<6>;
	.reg .f32 	%f<136>;
	.reg .b32 	%r<44>;
	.reg .b64 	%rd<13>;


	mov.u64 	%rd12, __local_depot0;
	cvta.local.u64 	%SP, %rd12;
	ld.global.f32 	%f37, [ray+12];
	ld.global.f32 	%f38, [t_hit];
	ld.global.f32 	%f39, [ray+16];
	ld.global.f32 	%f40, [ray+20];
	ld.global.f32 	%f41, [ray];
	fma.rn.ftz.f32 	%f1, %f38, %f37, %f41;
	ld.global.f32 	%f42, [ray+4];
	fma.rn.ftz.f32 	%f2, %f38, %f39, %f42;
	ld.global.f32 	%f43, [ray+8];
	fma.rn.ftz.f32 	%f3, %f38, %f40, %f43;
	ld.global.f32 	%f24, [shading_normal];
	ld.global.f32 	%f25, [shading_normal+4];
	ld.global.f32 	%f26, [shading_normal+8];
	mov.u32 	%r16, 7937;
	mov.f32 	%f135, 0f00000000;
	// inline asm
	call (%f20, %f21, %f22, %f23), _rt_transform_tuple, (%r16, %f24, %f25, %f26, %f135);
	// inline asm
	mul.ftz.f32 	%f44, %f21, %f21;
	fma.rn.ftz.f32 	%f45, %f20, %f20, %f44;
	fma.rn.ftz.f32 	%f46, %f22, %f22, %f45;
	rsqrt.approx.ftz.f32 	%f47, %f46;
	mul.ftz.f32 	%f48, %f20, %f47;
	mul.ftz.f32 	%f49, %f21, %f47;
	mul.ftz.f32 	%f50, %f22, %f47;
	ld.global.f32 	%f32, [geometric_normal];
	ld.global.f32 	%f33, [geometric_normal+4];
	ld.global.f32 	%f34, [geometric_normal+8];
	// inline asm
	call (%f28, %f29, %f30, %f31), _rt_transform_tuple, (%r16, %f32, %f33, %f34, %f135);
	// inline asm
	mul.ftz.f32 	%f51, %f29, %f29;
	fma.rn.ftz.f32 	%f52, %f28, %f28, %f51;
	fma.rn.ftz.f32 	%f53, %f30, %f30, %f52;
	rsqrt.approx.ftz.f32 	%f54, %f53;
	mul.ftz.f32 	%f55, %f28, %f54;
	mul.ftz.f32 	%f56, %f29, %f54;
	mul.ftz.f32 	%f57, %f30, %f54;
	ld.global.f32 	%f58, [ray+12];
	mul.ftz.f32 	%f59, %f58, %f55;
	ld.global.f32 	%f60, [ray+16];
	mul.ftz.f32 	%f61, %f56, %f60;
	neg.ftz.f32 	%f62, %f61;
	sub.ftz.f32 	%f63, %f62, %f59;
	ld.global.f32 	%f64, [ray+20];
	mul.ftz.f32 	%f65, %f57, %f64;
	sub.ftz.f32 	%f66, %f63, %f65;
	mov.b32 	 %r19, %f66;
	and.b32  	%r20, %r19, -2147483648;
	or.b32  	%r21, %r20, 1065353216;
	mov.b32 	 %f67, %r21;
	mul.ftz.f32 	%f4, %f48, %f67;
	mul.ftz.f32 	%f5, %f49, %f67;
	mul.ftz.f32 	%f6, %f50, %f67;
	abs.ftz.f32 	%f68, %f4;
	abs.ftz.f32 	%f69, %f6;
	setp.gt.ftz.f32	%p1, %f68, %f69;
	neg.ftz.f32 	%f70, %f5;
	neg.ftz.f32 	%f71, %f6;
	selp.f32	%f72, %f70, 0f00000000, %p1;
	selp.f32	%f73, %f4, %f71, %p1;
	selp.f32	%f74, 0f00000000, %f5, %p1;
	mul.ftz.f32 	%f75, %f73, %f73;
	fma.rn.ftz.f32 	%f76, %f72, %f72, %f75;
	fma.rn.ftz.f32 	%f77, %f74, %f74, %f76;
	rsqrt.approx.ftz.f32 	%f78, %f77;
	mul.ftz.f32 	%f7, %f78, %f72;
	mul.ftz.f32 	%f8, %f78, %f73;
	mul.ftz.f32 	%f9, %f78, %f74;
	ld.global.v2.u32 	{%r22, %r23}, [launch_index];
	cvt.u64.u32	%rd5, %r22;
	cvt.u64.u32	%rd6, %r23;
	mov.u64 	%rd9, rnd_seeds;
	cvta.global.u64 	%rd4, %rd9;
	mov.u32 	%r17, 2;
	mov.u32 	%r18, 4;
	mov.u64 	%rd8, 0;
	// inline asm
	call (%rd3), _rt_buffer_get_64, (%rd4, %r17, %r18, %rd5, %rd6, %rd8, %rd8);
	// inline asm
	ld.global.u32 	%r43, [sqrt_occlusion_samples];
	setp.lt.s32	%p2, %r43, 1;
	@%p2 bra 	BB0_6;

	mul.ftz.f32 	%f80, %f6, %f8;
	mul.ftz.f32 	%f81, %f5, %f9;
	sub.ftz.f32 	%f10, %f80, %f81;
	mul.ftz.f32 	%f82, %f4, %f9;
	mul.ftz.f32 	%f83, %f6, %f7;
	sub.ftz.f32 	%f11, %f82, %f83;
	mul.ftz.f32 	%f84, %f5, %f7;
	mul.ftz.f32 	%f85, %f4, %f8;
	sub.ftz.f32 	%f12, %f84, %f85;
	ld.global.u32 	%r27, [subframe_idx];
	ld.global.u32 	%r28, [frame];
	add.s32 	%r29, %r27, %r28;
	ld.u32 	%r30, [%rd3];
	xor.b32  	%r42, %r29, %r30;
	cvt.rn.f32.s32	%f86, %r43;
	rcp.approx.ftz.f32 	%f13, %f86;
	add.u64 	%rd10, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd10;
	mov.f32 	%f135, 0f00000000;
	mov.u32 	%r40, 0;

BB0_2:
	setp.lt.s32	%p3, %r43, 1;
	@%p3 bra 	BB0_5;

	cvt.rn.f32.s32	%f15, %r40;
	mov.u32 	%r31, 0;
	mov.u32 	%r41, %r31;

BB0_4:
	mov.u32 	%r6, %r41;
	st.local.u32 	[%rd2], %r31;
	mad.lo.s32 	%r36, %r42, 1664525, 1013904223;
	and.b32  	%r37, %r36, 16777215;
	cvt.rn.f32.u32	%f95, %r37;
	mov.f32 	%f96, 0f4B800000;
	div.approx.ftz.f32 	%f97, %f95, %f96;
	add.ftz.f32 	%f98, %f15, %f97;
	mul.ftz.f32 	%f99, %f13, %f98;
	mad.lo.s32 	%r42, %r36, 1664525, 1013904223;
	and.b32  	%r38, %r42, 16777215;
	cvt.rn.f32.u32	%f100, %r38;
	div.approx.ftz.f32 	%f101, %f100, %f96;
	cvt.rn.f32.s32	%f102, %r6;
	add.ftz.f32 	%f103, %f102, %f101;
	mul.ftz.f32 	%f104, %f13, %f103;
	sqrt.approx.ftz.f32 	%f105, %f99;
	mul.ftz.f32 	%f106, %f104, 0f40C90FDB;
	cos.approx.ftz.f32 	%f107, %f106;
	mul.ftz.f32 	%f108, %f105, %f107;
	sin.approx.ftz.f32 	%f109, %f106;
	mul.ftz.f32 	%f110, %f105, %f109;
	mul.ftz.f32 	%f111, %f108, %f108;
	mov.f32 	%f112, 0f3F800000;
	sub.ftz.f32 	%f113, %f112, %f111;
	mul.ftz.f32 	%f114, %f110, %f110;
	sub.ftz.f32 	%f115, %f113, %f114;
	mov.f32 	%f116, 0f00000000;
	max.ftz.f32 	%f117, %f116, %f115;
	sqrt.approx.ftz.f32 	%f118, %f117;
	mul.ftz.f32 	%f119, %f7, %f110;
	mul.ftz.f32 	%f120, %f8, %f110;
	mul.ftz.f32 	%f121, %f9, %f110;
	fma.rn.ftz.f32 	%f122, %f10, %f108, %f119;
	fma.rn.ftz.f32 	%f123, %f11, %f108, %f120;
	fma.rn.ftz.f32 	%f124, %f12, %f108, %f121;
	fma.rn.ftz.f32 	%f90, %f4, %f118, %f122;
	fma.rn.ftz.f32 	%f91, %f5, %f118, %f123;
	fma.rn.ftz.f32 	%f92, %f6, %f118, %f124;
	ld.global.f32 	%f93, [scene_epsilon];
	ld.global.f32 	%f94, [occlusion_distance];
	ld.global.u32 	%r32, [top_object];
	mov.u32 	%r33, 1;
	// inline asm
	call _rt_trace_64, (%r32, %f1, %f2, %f3, %f90, %f91, %f92, %r33, %f93, %f94, %rd10, %r18);
	// inline asm
	ld.local.f32 	%f125, [%rd2];
	sub.ftz.f32 	%f126, %f112, %f125;
	add.ftz.f32 	%f135, %f135, %f126;
	ld.global.u32 	%r43, [sqrt_occlusion_samples];
	add.s32 	%r10, %r6, 1;
	setp.lt.s32	%p4, %r10, %r43;
	mov.u32 	%r41, %r10;
	@%p4 bra 	BB0_4;

BB0_5:
	add.s32 	%r40, %r40, 1;
	setp.lt.s32	%p5, %r40, %r43;
	@%p5 bra 	BB0_2;

BB0_6:
	mul.lo.s32 	%r39, %r43, %r43;
	cvt.rn.f32.s32	%f127, %r39;
	div.approx.ftz.f32 	%f128, %f135, %f127;
	ld.global.f32 	%f129, [shading_color];
	ld.global.f32 	%f130, [shading_color+4];
	ld.global.f32 	%f131, [shading_color+8];
	mul.ftz.f32 	%f132, %f128, %f131;
	mul.ftz.f32 	%f133, %f128, %f130;
	mul.ftz.f32 	%f134, %f128, %f129;
	st.global.v2.f32 	[prd_radiance], {%f134, %f133};
	st.global.f32 	[prd_radiance+8], %f132;
	ret;
}

	// .globl	_Z17any_hit_occlusionv
.visible .entry _Z17any_hit_occlusionv(

)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 1065353216;
	st.global.u32 	[prd_occlusion], %r1;
	// inline asm
	call _rt_terminate_ray, ();
	// inline asm
	ret;
}

	// .globl	_Z29closest_hit_radiance_phong_aov
.visible .entry _Z29closest_hit_radiance_phong_aov(

)
{
	.local .align 8 .b8 	__local_depot2[48];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<17>;
	.reg .f32 	%f<275>;
	.reg .b32 	%r<64>;
	.reg .b64 	%rd<38>;


	mov.u64 	%rd37, __local_depot2;
	cvta.local.u64 	%SP, %rd37;
	ld.global.f32 	%f91, [ray+12];
	ld.global.f32 	%f92, [t_hit];
	ld.global.f32 	%f93, [ray+16];
	ld.global.f32 	%f94, [ray+20];
	ld.global.f32 	%f95, [ray];
	fma.rn.ftz.f32 	%f1, %f92, %f91, %f95;
	ld.global.f32 	%f96, [ray+4];
	fma.rn.ftz.f32 	%f2, %f92, %f93, %f96;
	ld.global.f32 	%f97, [ray+8];
	fma.rn.ftz.f32 	%f3, %f92, %f94, %f97;
	ld.global.f32 	%f78, [shading_normal];
	ld.global.f32 	%f79, [shading_normal+4];
	ld.global.f32 	%f80, [shading_normal+8];
	mov.u32 	%r21, 7937;
	mov.f32 	%f266, 0f00000000;
	// inline asm
	call (%f74, %f75, %f76, %f77), _rt_transform_tuple, (%r21, %f78, %f79, %f80, %f266);
	// inline asm
	mul.ftz.f32 	%f98, %f75, %f75;
	fma.rn.ftz.f32 	%f99, %f74, %f74, %f98;
	fma.rn.ftz.f32 	%f100, %f76, %f76, %f99;
	rsqrt.approx.ftz.f32 	%f101, %f100;
	mul.ftz.f32 	%f102, %f74, %f101;
	mul.ftz.f32 	%f103, %f75, %f101;
	mul.ftz.f32 	%f104, %f76, %f101;
	ld.global.f32 	%f86, [geometric_normal];
	ld.global.f32 	%f87, [geometric_normal+4];
	ld.global.f32 	%f88, [geometric_normal+8];
	// inline asm
	call (%f82, %f83, %f84, %f85), _rt_transform_tuple, (%r21, %f86, %f87, %f88, %f266);
	// inline asm
	mul.ftz.f32 	%f105, %f83, %f83;
	fma.rn.ftz.f32 	%f106, %f82, %f82, %f105;
	fma.rn.ftz.f32 	%f107, %f84, %f84, %f106;
	rsqrt.approx.ftz.f32 	%f108, %f107;
	mul.ftz.f32 	%f109, %f82, %f108;
	mul.ftz.f32 	%f110, %f83, %f108;
	mul.ftz.f32 	%f111, %f84, %f108;
	ld.global.f32 	%f112, [ray+12];
	mul.ftz.f32 	%f113, %f112, %f109;
	ld.global.f32 	%f114, [ray+16];
	mul.ftz.f32 	%f115, %f110, %f114;
	neg.ftz.f32 	%f116, %f115;
	sub.ftz.f32 	%f117, %f116, %f113;
	ld.global.f32 	%f118, [ray+20];
	mul.ftz.f32 	%f119, %f111, %f118;
	sub.ftz.f32 	%f120, %f117, %f119;
	mov.b32 	 %r24, %f120;
	and.b32  	%r25, %r24, -2147483648;
	or.b32  	%r26, %r25, 1065353216;
	mov.b32 	 %f121, %r26;
	mul.ftz.f32 	%f4, %f102, %f121;
	mul.ftz.f32 	%f5, %f103, %f121;
	mul.ftz.f32 	%f6, %f104, %f121;
	abs.ftz.f32 	%f122, %f4;
	abs.ftz.f32 	%f123, %f6;
	setp.gt.ftz.f32	%p1, %f122, %f123;
	neg.ftz.f32 	%f124, %f5;
	neg.ftz.f32 	%f125, %f6;
	selp.f32	%f126, %f124, 0f00000000, %p1;
	selp.f32	%f127, %f4, %f125, %p1;
	selp.f32	%f128, 0f00000000, %f5, %p1;
	mul.ftz.f32 	%f129, %f127, %f127;
	fma.rn.ftz.f32 	%f130, %f126, %f126, %f129;
	fma.rn.ftz.f32 	%f131, %f128, %f128, %f130;
	rsqrt.approx.ftz.f32 	%f132, %f131;
	mul.ftz.f32 	%f7, %f132, %f126;
	mul.ftz.f32 	%f8, %f132, %f127;
	mul.ftz.f32 	%f9, %f132, %f128;
	ld.global.v2.u32 	{%r27, %r28}, [launch_index];
	cvt.u64.u32	%rd9, %r27;
	cvt.u64.u32	%rd10, %r28;
	mov.u64 	%rd13, rnd_seeds;
	cvta.global.u64 	%rd8, %rd13;
	mov.u32 	%r22, 2;
	mov.u32 	%r23, 4;
	mov.u64 	%rd36, 0;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r22, %r23, %rd9, %rd10, %rd36, %rd36);
	// inline asm
	ld.global.u32 	%r62, [sqrt_occlusion_samples];
	setp.lt.s32	%p2, %r62, 1;
	@%p2 bra 	BB2_6;

	mul.ftz.f32 	%f134, %f6, %f8;
	mul.ftz.f32 	%f135, %f5, %f9;
	sub.ftz.f32 	%f10, %f134, %f135;
	mul.ftz.f32 	%f136, %f4, %f9;
	mul.ftz.f32 	%f137, %f6, %f7;
	sub.ftz.f32 	%f11, %f136, %f137;
	mul.ftz.f32 	%f138, %f5, %f7;
	mul.ftz.f32 	%f139, %f4, %f8;
	sub.ftz.f32 	%f12, %f138, %f139;
	ld.global.u32 	%r32, [frame];
	ld.u32 	%r33, [%rd7];
	xor.b32  	%r61, %r32, %r33;
	cvt.rn.f32.s32	%f140, %r62;
	rcp.approx.ftz.f32 	%f13, %f140;
	add.u64 	%rd14, %SP, 40;
	cvta.to.local.u64 	%rd2, %rd14;
	mov.f32 	%f266, 0f00000000;
	mov.u32 	%r59, 0;

BB2_2:
	setp.lt.s32	%p3, %r62, 1;
	@%p3 bra 	BB2_5;

	cvt.rn.f32.s32	%f15, %r59;
	mov.u32 	%r34, 0;
	mov.u32 	%r60, %r34;

BB2_4:
	mov.u32 	%r6, %r60;
	st.local.u32 	[%rd2], %r34;
	mad.lo.s32 	%r39, %r61, 1664525, 1013904223;
	and.b32  	%r40, %r39, 16777215;
	cvt.rn.f32.u32	%f149, %r40;
	mov.f32 	%f150, 0f4B800000;
	div.approx.ftz.f32 	%f151, %f149, %f150;
	add.ftz.f32 	%f152, %f15, %f151;
	mul.ftz.f32 	%f153, %f13, %f152;
	mad.lo.s32 	%r61, %r39, 1664525, 1013904223;
	and.b32  	%r41, %r61, 16777215;
	cvt.rn.f32.u32	%f154, %r41;
	div.approx.ftz.f32 	%f155, %f154, %f150;
	cvt.rn.f32.s32	%f156, %r6;
	add.ftz.f32 	%f157, %f156, %f155;
	mul.ftz.f32 	%f158, %f13, %f157;
	sqrt.approx.ftz.f32 	%f159, %f153;
	mul.ftz.f32 	%f160, %f158, 0f40C90FDB;
	cos.approx.ftz.f32 	%f161, %f160;
	mul.ftz.f32 	%f162, %f159, %f161;
	sin.approx.ftz.f32 	%f163, %f160;
	mul.ftz.f32 	%f164, %f159, %f163;
	mul.ftz.f32 	%f165, %f162, %f162;
	mov.f32 	%f166, 0f3F800000;
	sub.ftz.f32 	%f167, %f166, %f165;
	mul.ftz.f32 	%f168, %f164, %f164;
	sub.ftz.f32 	%f169, %f167, %f168;
	mov.f32 	%f170, 0f00000000;
	max.ftz.f32 	%f171, %f170, %f169;
	sqrt.approx.ftz.f32 	%f172, %f171;
	mul.ftz.f32 	%f173, %f7, %f164;
	mul.ftz.f32 	%f174, %f8, %f164;
	mul.ftz.f32 	%f175, %f9, %f164;
	fma.rn.ftz.f32 	%f176, %f10, %f162, %f173;
	fma.rn.ftz.f32 	%f177, %f11, %f162, %f174;
	fma.rn.ftz.f32 	%f178, %f12, %f162, %f175;
	fma.rn.ftz.f32 	%f144, %f4, %f172, %f176;
	fma.rn.ftz.f32 	%f145, %f5, %f172, %f177;
	fma.rn.ftz.f32 	%f146, %f6, %f172, %f178;
	ld.global.f32 	%f147, [scene_epsilon];
	ld.global.f32 	%f148, [occlusion_distance];
	ld.global.u32 	%r35, [top_object];
	// inline asm
	call _rt_trace_64, (%r35, %f1, %f2, %f3, %f144, %f145, %f146, %r22, %f147, %f148, %rd14, %r23);
	// inline asm
	ld.local.f32 	%f179, [%rd2];
	sub.ftz.f32 	%f180, %f166, %f179;
	add.ftz.f32 	%f266, %f266, %f180;
	ld.global.u32 	%r62, [sqrt_occlusion_samples];
	add.s32 	%r10, %r6, 1;
	setp.lt.s32	%p4, %r10, %r62;
	mov.u32 	%r60, %r10;
	@%p4 bra 	BB2_4;

BB2_5:
	add.s32 	%r59, %r59, 1;
	setp.lt.s32	%p5, %r59, %r62;
	@%p5 bra 	BB2_2;

BB2_6:
	mul.lo.s32 	%r44, %r62, %r62;
	cvt.rn.f32.s32	%f181, %r44;
	div.approx.ftz.f32 	%f20, %f266, %f181;
	ld.global.f32 	%f21, [Kd];
	ld.global.f32 	%f182, [Ka];
	ld.global.f32 	%f22, [Ks];
	ld.global.f32 	%f23, [phong_exp];
	ld.global.f32 	%f24, [Kr];
	ld.global.f32 	%f183, [ray+12];
	ld.global.f32 	%f184, [t_hit];
	ld.global.f32 	%f185, [ray+16];
	ld.global.f32 	%f186, [ray+20];
	ld.global.f32 	%f187, [ray];
	fma.rn.ftz.f32 	%f25, %f184, %f183, %f187;
	ld.global.f32 	%f188, [ray+4];
	fma.rn.ftz.f32 	%f26, %f184, %f185, %f188;
	ld.global.f32 	%f189, [ray+8];
	fma.rn.ftz.f32 	%f27, %f184, %f186, %f189;
	ld.global.f32 	%f190, [ambient_light_color];
	mul.ftz.f32 	%f272, %f182, %f190;
	ld.global.f32 	%f191, [ambient_light_color+4];
	mul.ftz.f32 	%f273, %f182, %f191;
	ld.global.f32 	%f192, [ambient_light_color+8];
	mul.ftz.f32 	%f274, %f182, %f192;
	mov.u64 	%rd21, lights;
	cvta.global.u64 	%rd20, %rd21;
	mov.u32 	%r42, 1;
	mov.u32 	%r43, 32;
	// inline asm
	call (%rd16, %rd17, %rd18, %rd19), _rt_buffer_get_size_64, (%rd20, %r42, %r43);
	// inline asm
	cvt.u32.u64	%r15, %rd16;
	setp.eq.s32	%p6, %r15, 0;
	@%p6 bra 	BB2_14;

	add.u64 	%rd23, %SP, 0;
	cvta.to.local.u64 	%rd3, %rd23;
	mov.u32 	%r63, 0;

BB2_8:
	mov.u64 	%rd35, 0;
	// inline asm
	call (%rd24), _rt_buffer_get_64, (%rd20, %r42, %r43, %rd36, %rd35, %rd35, %rd35);
	// inline asm
	ld.f32 	%f39, [%rd24+20];
	ld.f32 	%f38, [%rd24+16];
	ld.f32 	%f37, [%rd24+12];
	ld.u32 	%r17, [%rd24+24];
	ld.f32 	%f36, [%rd24+8];
	ld.f32 	%f35, [%rd24+4];
	ld.f32 	%f34, [%rd24];
	sub.ftz.f32 	%f193, %f34, %f25;
	sub.ftz.f32 	%f194, %f35, %f26;
	sub.ftz.f32 	%f195, %f36, %f27;
	mul.ftz.f32 	%f196, %f194, %f194;
	fma.rn.ftz.f32 	%f197, %f193, %f193, %f196;
	fma.rn.ftz.f32 	%f198, %f195, %f195, %f197;
	sqrt.approx.ftz.f32 	%f40, %f198;
	rsqrt.approx.ftz.f32 	%f199, %f198;
	mul.ftz.f32 	%f41, %f193, %f199;
	mul.ftz.f32 	%f42, %f194, %f199;
	mul.ftz.f32 	%f43, %f195, %f199;
	mul.ftz.f32 	%f200, %f5, %f42;
	fma.rn.ftz.f32 	%f201, %f4, %f41, %f200;
	fma.rn.ftz.f32 	%f44, %f6, %f43, %f201;
	setp.gt.ftz.f32	%p7, %f44, 0f00000000;
	selp.u32	%r48, 1, 0, %p7;
	cvt.rn.f32.s32	%f271, %r48;
	setp.ne.s32	%p8, %r17, 0;
	and.pred  	%p9, %p7, %p8;
	mov.f32 	%f270, %f271;
	mov.f32 	%f269, %f271;
	@!%p9 bra 	BB2_10;
	bra.uni 	BB2_9;

BB2_9:
	mov.u32 	%r52, 1065353216;
	st.local.u32 	[%rd3+8], %r52;
	mov.f32 	%f210, 0f3F800000;
	st.local.v2.f32 	[%rd3], {%f210, %f210};
	ld.global.u32 	%r50, [shadow_ray_type];
	ld.global.f32 	%f208, [scene_epsilon];
	ld.global.u32 	%r49, [top_object];
	mov.u32 	%r51, 12;
	// inline asm
	call _rt_trace_64, (%r49, %f25, %f26, %f27, %f41, %f42, %f43, %r50, %f208, %f40, %rd23, %r51);
	// inline asm
	ld.local.v2.f32 	{%f211, %f212}, [%rd3];
	mov.f32 	%f271, %f211;
	mov.f32 	%f270, %f212;
	ld.local.f32 	%f269, [%rd3+8];

BB2_10:
	max.ftz.f32 	%f213, %f271, %f270;
	max.ftz.f32 	%f214, %f213, %f269;
	setp.leu.ftz.f32	%p10, %f214, 0f00000000;
	@%p10 bra 	BB2_13;

	mul.ftz.f32 	%f52, %f37, %f271;
	mul.ftz.f32 	%f215, %f21, %f44;
	mul.ftz.f32 	%f53, %f38, %f270;
	mul.ftz.f32 	%f54, %f39, %f269;
	fma.rn.ftz.f32 	%f272, %f215, %f52, %f272;
	fma.rn.ftz.f32 	%f273, %f215, %f53, %f273;
	fma.rn.ftz.f32 	%f274, %f215, %f54, %f274;
	ld.global.f32 	%f216, [ray+12];
	sub.ftz.f32 	%f217, %f41, %f216;
	ld.global.f32 	%f218, [ray+16];
	sub.ftz.f32 	%f219, %f42, %f218;
	ld.global.f32 	%f220, [ray+20];
	sub.ftz.f32 	%f221, %f43, %f220;
	mul.ftz.f32 	%f222, %f219, %f219;
	fma.rn.ftz.f32 	%f223, %f217, %f217, %f222;
	fma.rn.ftz.f32 	%f224, %f221, %f221, %f223;
	rsqrt.approx.ftz.f32 	%f225, %f224;
	mul.ftz.f32 	%f226, %f217, %f225;
	mul.ftz.f32 	%f227, %f219, %f225;
	mul.ftz.f32 	%f228, %f221, %f225;
	mul.ftz.f32 	%f229, %f5, %f227;
	fma.rn.ftz.f32 	%f230, %f4, %f226, %f229;
	fma.rn.ftz.f32 	%f58, %f6, %f228, %f230;
	setp.leu.ftz.f32	%p11, %f58, 0f00000000;
	@%p11 bra 	BB2_13;

	lg2.approx.ftz.f32 	%f231, %f58;
	mul.ftz.f32 	%f232, %f23, %f231;
	ex2.approx.ftz.f32 	%f233, %f232;
	mul.ftz.f32 	%f234, %f22, %f233;
	fma.rn.ftz.f32 	%f272, %f52, %f234, %f272;
	fma.rn.ftz.f32 	%f273, %f53, %f234, %f273;
	fma.rn.ftz.f32 	%f274, %f54, %f234, %f274;

BB2_13:
	add.s64 	%rd36, %rd36, 1;
	add.s32 	%r63, %r63, 1;
	setp.lt.u32	%p12, %r63, %r15;
	@%p12 bra 	BB2_8;

BB2_14:
	setp.leu.ftz.f32	%p13, %f24, 0f00000000;
	@%p13 bra 	BB2_17;

	add.u64 	%rd32, %SP, 16;
	cvta.to.local.u64 	%rd33, %rd32;
	ld.global.f32 	%f235, [prd+12];
	mul.ftz.f32 	%f236, %f24, 0f3F170A3D;
	fma.rn.ftz.f32 	%f237, %f24, 0f3E99999A, %f236;
	fma.rn.ftz.f32 	%f238, %f24, 0f3DE147AE, %f237;
	mul.ftz.f32 	%f239, %f238, %f235;
	add.s64 	%rd6, %rd33, 12;
	ld.global.u32 	%r53, [prd+16];
	st.local.f32 	[%rd33+12], %f239;
	add.s32 	%r54, %r53, 1;
	st.local.u32 	[%rd33+16], %r54;
	setp.ge.ftz.f32	%p14, %f239, 0f3C23D70A;
	ld.global.u32 	%r55, [max_depth];
	setp.lt.s32	%p15, %r53, %r55;
	and.pred  	%p16, %p14, %p15;
	@!%p16 bra 	BB2_17;
	bra.uni 	BB2_16;

BB2_16:
	ld.global.f32 	%f248, [ray+12];
	ld.global.f32 	%f249, [ray+16];
	mul.ftz.f32 	%f250, %f5, %f249;
	fma.rn.ftz.f32 	%f251, %f4, %f248, %f250;
	ld.global.f32 	%f252, [ray+20];
	fma.rn.ftz.f32 	%f253, %f6, %f252, %f251;
	add.ftz.f32 	%f254, %f4, %f4;
	mul.ftz.f32 	%f255, %f254, %f253;
	add.ftz.f32 	%f256, %f5, %f5;
	mul.ftz.f32 	%f257, %f256, %f253;
	add.ftz.f32 	%f258, %f6, %f6;
	mul.ftz.f32 	%f259, %f258, %f253;
	sub.ftz.f32 	%f243, %f248, %f255;
	sub.ftz.f32 	%f244, %f249, %f257;
	sub.ftz.f32 	%f245, %f252, %f259;
	ld.global.u32 	%r57, [radiance_ray_type];
	ld.global.f32 	%f246, [scene_epsilon];
	ld.global.u32 	%r56, [top_object];
	mov.f32 	%f247, 0f6C4ECB8F;
	mov.u32 	%r58, 20;
	// inline asm
	call _rt_trace_64, (%r56, %f25, %f26, %f27, %f243, %f244, %f245, %r57, %f246, %f247, %rd32, %r58);
	// inline asm
	ld.local.f32 	%f260, [%rd6+-12];
	ld.local.f32 	%f261, [%rd6+-8];
	ld.local.f32 	%f262, [%rd6+-4];
	fma.rn.ftz.f32 	%f272, %f24, %f260, %f272;
	fma.rn.ftz.f32 	%f273, %f24, %f261, %f273;
	fma.rn.ftz.f32 	%f274, %f24, %f262, %f274;

BB2_17:
	st.global.v2.f32 	[prd], {%f272, %f273};
	st.global.f32 	[prd+8], %f274;
	mul.ftz.f32 	%f263, %f273, %f20;
	mul.ftz.f32 	%f264, %f272, %f20;
	st.global.v2.f32 	[prd_radiance], {%f264, %f263};
	mul.ftz.f32 	%f265, %f274, %f20;
	st.global.f32 	[prd_radiance+8], %f265;
	ret;
}

	// .globl	_Z14any_hit_shadowv
.visible .entry _Z14any_hit_shadowv(

)
{
	.reg .f32 	%f<2>;
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 0;
	st.global.u32 	[prd_shadow+8], %r1;
	mov.f32 	%f1, 0f00000000;
	st.global.v2.f32 	[prd_shadow], {%f1, %f1};
	// inline asm
	call _rt_terminate_ray, ();
	// inline asm
	ret;
}


